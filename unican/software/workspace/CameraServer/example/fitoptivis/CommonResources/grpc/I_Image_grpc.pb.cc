// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: I_Image_grpc.proto

#include "I_Image_grpc.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace I_Image_grpc {
constexpr I_Image_in::I_Image_in(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct I_Image_inDefaultTypeInternal {
  constexpr I_Image_inDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~I_Image_inDefaultTypeInternal() {}
  union {
    I_Image_in _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT I_Image_inDefaultTypeInternal _I_Image_in_default_instance_;
constexpr I_Image_out::I_Image_out(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , h_(0)
  , w_(0)
  , format_(0){}
struct I_Image_outDefaultTypeInternal {
  constexpr I_Image_outDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~I_Image_outDefaultTypeInternal() {}
  union {
    I_Image_out _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT I_Image_outDefaultTypeInternal _I_Image_out_default_instance_;
}  // namespace I_Image_grpc
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_I_5fImage_5fgrpc_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_I_5fImage_5fgrpc_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_I_5fImage_5fgrpc_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_I_5fImage_5fgrpc_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::I_Image_grpc::I_Image_in, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::I_Image_grpc::I_Image_out, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::I_Image_grpc::I_Image_out, h_),
  PROTOBUF_FIELD_OFFSET(::I_Image_grpc::I_Image_out, w_),
  PROTOBUF_FIELD_OFFSET(::I_Image_grpc::I_Image_out, format_),
  PROTOBUF_FIELD_OFFSET(::I_Image_grpc::I_Image_out, data_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::I_Image_grpc::I_Image_in)},
  { 5, -1, sizeof(::I_Image_grpc::I_Image_out)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::I_Image_grpc::_I_Image_in_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::I_Image_grpc::_I_Image_out_default_instance_),
};

const char descriptor_table_protodef_I_5fImage_5fgrpc_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022I_Image_grpc.proto\022\014I_Image_grpc\"\014\n\nI_"
  "Image_in\"A\n\013I_Image_out\022\t\n\001h\030\001 \001(\005\022\t\n\001w\030"
  "\002 \001(\005\022\016\n\006format\030\003 \001(\005\022\014\n\004data\030\004 \001(\0142K\n\007I"
  "_Image\022@\n\tget_image\022\030.I_Image_grpc.I_Ima"
  "ge_in\032\031.I_Image_grpc.I_Image_outb\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_I_5fImage_5fgrpc_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_I_5fImage_5fgrpc_2eproto = {
  false, false, 200, descriptor_table_protodef_I_5fImage_5fgrpc_2eproto, "I_Image_grpc.proto", 
  &descriptor_table_I_5fImage_5fgrpc_2eproto_once, nullptr, 0, 2,
  schemas, file_default_instances, TableStruct_I_5fImage_5fgrpc_2eproto::offsets,
  file_level_metadata_I_5fImage_5fgrpc_2eproto, file_level_enum_descriptors_I_5fImage_5fgrpc_2eproto, file_level_service_descriptors_I_5fImage_5fgrpc_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_I_5fImage_5fgrpc_2eproto_getter() {
  return &descriptor_table_I_5fImage_5fgrpc_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_I_5fImage_5fgrpc_2eproto(&descriptor_table_I_5fImage_5fgrpc_2eproto);
namespace I_Image_grpc {

// ===================================================================

class I_Image_in::_Internal {
 public:
};

I_Image_in::I_Image_in(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:I_Image_grpc.I_Image_in)
}
I_Image_in::I_Image_in(const I_Image_in& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:I_Image_grpc.I_Image_in)
}

void I_Image_in::SharedCtor() {
}

I_Image_in::~I_Image_in() {
  // @@protoc_insertion_point(destructor:I_Image_grpc.I_Image_in)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void I_Image_in::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void I_Image_in::ArenaDtor(void* object) {
  I_Image_in* _this = reinterpret_cast< I_Image_in* >(object);
  (void)_this;
}
void I_Image_in::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void I_Image_in::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void I_Image_in::Clear() {
// @@protoc_insertion_point(message_clear_start:I_Image_grpc.I_Image_in)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* I_Image_in::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* I_Image_in::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:I_Image_grpc.I_Image_in)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:I_Image_grpc.I_Image_in)
  return target;
}

size_t I_Image_in::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:I_Image_grpc.I_Image_in)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void I_Image_in::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:I_Image_grpc.I_Image_in)
  GOOGLE_DCHECK_NE(&from, this);
  const I_Image_in* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<I_Image_in>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:I_Image_grpc.I_Image_in)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:I_Image_grpc.I_Image_in)
    MergeFrom(*source);
  }
}

void I_Image_in::MergeFrom(const I_Image_in& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:I_Image_grpc.I_Image_in)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void I_Image_in::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:I_Image_grpc.I_Image_in)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void I_Image_in::CopyFrom(const I_Image_in& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:I_Image_grpc.I_Image_in)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool I_Image_in::IsInitialized() const {
  return true;
}

void I_Image_in::InternalSwap(I_Image_in* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata I_Image_in::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_I_5fImage_5fgrpc_2eproto_getter, &descriptor_table_I_5fImage_5fgrpc_2eproto_once,
      file_level_metadata_I_5fImage_5fgrpc_2eproto[0]);
}

// ===================================================================

class I_Image_out::_Internal {
 public:
};

I_Image_out::I_Image_out(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:I_Image_grpc.I_Image_out)
}
I_Image_out::I_Image_out(const I_Image_out& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_data(), 
      GetArena());
  }
  ::memcpy(&h_, &from.h_,
    static_cast<size_t>(reinterpret_cast<char*>(&format_) -
    reinterpret_cast<char*>(&h_)) + sizeof(format_));
  // @@protoc_insertion_point(copy_constructor:I_Image_grpc.I_Image_out)
}

void I_Image_out::SharedCtor() {
data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&h_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&format_) -
    reinterpret_cast<char*>(&h_)) + sizeof(format_));
}

I_Image_out::~I_Image_out() {
  // @@protoc_insertion_point(destructor:I_Image_grpc.I_Image_out)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void I_Image_out::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void I_Image_out::ArenaDtor(void* object) {
  I_Image_out* _this = reinterpret_cast< I_Image_out* >(object);
  (void)_this;
}
void I_Image_out::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void I_Image_out::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void I_Image_out::Clear() {
// @@protoc_insertion_point(message_clear_start:I_Image_grpc.I_Image_out)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmpty();
  ::memset(&h_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&format_) -
      reinterpret_cast<char*>(&h_)) + sizeof(format_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* I_Image_out::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 h = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          h_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 w = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          w_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 format = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          format_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes data = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* I_Image_out::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:I_Image_grpc.I_Image_out)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 h = 1;
  if (this->h() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_h(), target);
  }

  // int32 w = 2;
  if (this->w() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_w(), target);
  }

  // int32 format = 3;
  if (this->format() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_format(), target);
  }

  // bytes data = 4;
  if (this->data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:I_Image_grpc.I_Image_out)
  return target;
}

size_t I_Image_out::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:I_Image_grpc.I_Image_out)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 4;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  // int32 h = 1;
  if (this->h() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_h());
  }

  // int32 w = 2;
  if (this->w() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_w());
  }

  // int32 format = 3;
  if (this->format() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_format());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void I_Image_out::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:I_Image_grpc.I_Image_out)
  GOOGLE_DCHECK_NE(&from, this);
  const I_Image_out* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<I_Image_out>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:I_Image_grpc.I_Image_out)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:I_Image_grpc.I_Image_out)
    MergeFrom(*source);
  }
}

void I_Image_out::MergeFrom(const I_Image_out& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:I_Image_grpc.I_Image_out)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {
    _internal_set_data(from._internal_data());
  }
  if (from.h() != 0) {
    _internal_set_h(from._internal_h());
  }
  if (from.w() != 0) {
    _internal_set_w(from._internal_w());
  }
  if (from.format() != 0) {
    _internal_set_format(from._internal_format());
  }
}

void I_Image_out::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:I_Image_grpc.I_Image_out)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void I_Image_out::CopyFrom(const I_Image_out& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:I_Image_grpc.I_Image_out)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool I_Image_out::IsInitialized() const {
  return true;
}

void I_Image_out::InternalSwap(I_Image_out* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  data_.Swap(&other->data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(I_Image_out, format_)
      + sizeof(I_Image_out::format_)
      - PROTOBUF_FIELD_OFFSET(I_Image_out, h_)>(
          reinterpret_cast<char*>(&h_),
          reinterpret_cast<char*>(&other->h_));
}

::PROTOBUF_NAMESPACE_ID::Metadata I_Image_out::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_I_5fImage_5fgrpc_2eproto_getter, &descriptor_table_I_5fImage_5fgrpc_2eproto_once,
      file_level_metadata_I_5fImage_5fgrpc_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace I_Image_grpc
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::I_Image_grpc::I_Image_in* Arena::CreateMaybeMessage< ::I_Image_grpc::I_Image_in >(Arena* arena) {
  return Arena::CreateMessageInternal< ::I_Image_grpc::I_Image_in >(arena);
}
template<> PROTOBUF_NOINLINE ::I_Image_grpc::I_Image_out* Arena::CreateMaybeMessage< ::I_Image_grpc::I_Image_out >(Arena* arena) {
  return Arena::CreateMessageInternal< ::I_Image_grpc::I_Image_out >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
